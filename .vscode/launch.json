{
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    {
      "name": "#W3 - Query with classification",
      "type": "python",
      "request": "launch",
      "program": "utilities/query.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": ["--classification"]
    },
    {
      "name": "#W3 - Generate labeled queries",
      "type": "python",
      "request": "launch",
      "program": "week3/create_labeled_queries.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": [
        // "--max_rows",
        // "50000",
        "--min_queries",
        "1000"
      ]
    },
    {
      "name": "#W2 - Query synonyms",
      "type": "python",
      "request": "launch",
      "program": "utilities/query.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": []
    },
    {
      "name": "#W2 - Generate synonyms",
      "type": "python",
      "request": "launch",
      "program": "week2/createContentTrainingData.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": [
        "--label",
        "name",
        "--transform",
        "--output",
        "datasets/fasttext/products.txt"
      ]
    },
    {
      "name": "#W2 - Create Content Training Data",
      "type": "python",
      "request": "launch",
      "program": "week2/createContentTrainingData.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": [
        "--label",
        "id",
        "--min_products",
        "500",
        "--output",
        "datasets/fasttext/labeled_products.txt"
      ]
    },
    {
      "name": "Current file",
      "type": "python",
      "request": "launch",
      "program": "${file}",
      "console": "integratedTerminal",
      "justMyCode": true
    },
    {
      "name": "1) Create ltr store",
      "type": "python",
      "request": "launch",
      "program": "week1/utilities/build_ltr.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": ["--create_ltr_store"]
    },
    {
      "name": "2) Upload ltr featureset",
      "type": "python",
      "request": "launch",
      "program": "week1/utilities/build_ltr.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": ["-f", "week1/conf/ltr_featureset.json", "--upload_featureset"]
    },
    {
      "name": "3) Split training and test sets from impressions",
      "type": "python",
      "request": "launch",
      "program": "week1/utilities/build_ltr.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": [
        "--output_dir",
        "ltr_output",
        "--split_input",
        "datasets/train.csv",
        "--split_train_rows",
        "1000000",
        "--split_test_rows",
        "1000000"
      ]
    },
    {
      "name": "4) Create impression data set",
      "type": "python",
      "request": "launch",
      "program": "week1/utilities/build_ltr.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": [
        "--generate_impressions",
        "--output_dir",
        "ltr_output",
        "--train_file",
        "ltr_output/train.csv",
        "--synthesize"
      ]
    },
    {
      "name": "5) Create training set from the impressions set",
      "type": "python",
      "request": "launch",
      "program": "week1/utilities/build_ltr.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": [
        "--ltr_terms_field",
        "sku",
        "--output_dir",
        "ltr_output",
        "--create_xgb_training",
        "-f",
        "week1/conf/ltr_featureset.json",
        "--click_model",
        "quantiles"
      ]
    },
    {
      "name": "6) Train an XGB model",
      "type": "python",
      "request": "launch",
      "program": "week1/utilities/build_ltr.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": [
        "--output_dir",
        "ltr_output/",
        "-x",
        "ltr_output/training.xgb",
        "--xgb_conf",
        "week1/conf/xgb-conf.json"
      ]
    },
    {
      "name": "7) Upload model to ltr",
      "type": "python",
      "request": "launch",
      "program": "week1/utilities/build_ltr.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": [
        "--upload_ltr_model",
        "--xgb_model",
        "ltr_output/xgb_model.model"
      ]
    },
    {
      "name": "8) Visualise model",
      "type": "python",
      "request": "launch",
      "program": "week1/utilities/build_ltr.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": ["--xgb_plot", "--output_dir", "ltr_output"]
    },
    {
      "name": "9) Run test queries",
      "type": "python",
      "request": "launch",
      "program": "week1/utilities/build_ltr.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": [
        "--xgb_test",
        "ltr_output/test.csv",
        "--train_file",
        "ltr_output/train.csv",
        "--output_dir",
        "ltr_output",
        "--xgb_test_num_queries",
        "100",
        "--xgb_main_query",
        "0",
        "--xgb_rescore_query_weight",
        "2"
      ]
    },
    {
      "name": "10) Analyze the results",
      "type": "python",
      "request": "launch",
      "program": "week1/utilities/build_ltr.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": ["--analyze", "--output_dir", "ltr_output"]
    }
  ]
}
